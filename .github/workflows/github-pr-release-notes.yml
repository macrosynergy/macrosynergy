# Edit PR comment workflow

name: Create release notes on PR
on:
  # Runs on pushes targeting the default branch
  pull_request:
    branches: [main, develop]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  edit-comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Restore caches - Python 3.11
        uses: ./.github/actions/restore-pip-cache
        with:
          python-version: 3.11

      - name: Generate PR Comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OUTPUT_FILE: docs/build/release_notes.md
        run: |
          python docs/scripts/release_notes.py -o $OUTPUT_FILE

      - name: Edit PR Comment
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          RELEASE_NOTES: docs/build/release_notes.md
        run: |
          # Fetch the current PR body
          CURRENT_PR_BODY=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/${{ github.event.pull_request.number }}" \
            | jq -r .body)

          # Append the new release notes to the current PR body
          NEW_RELEASE_NOTES=$(cat $RELEASE_NOTES)
          UPDATED_PR_BODY="$CURRENT_PR_BODY\n\n$NEW_RELEASE_NOTES"

          # Update the PR body with the concatenated content
          curl -L -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/${{ github.event.pull_request.number }}" \
            -d '{"body": "'"$UPDATED_PR_BODY"'"}'
