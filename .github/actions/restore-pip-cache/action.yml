# .github/actions/restore-caches/action.yml
name: "Restore Caches"
description: "Restore pip and apt caches"
inputs:
  python-version:
    description: "Python version to setup"
    required: true
    default: "3.11"
runs:
  using: "composite"
  steps:
  - name: Setup Python (Python >= 3.8)
    if: '!startsWith(inputs.python-version, "3.7")'
    uses: actions/setup-python@v5
    with:
      python-version: ${{ inputs.python-version }}

  - name: Setup Miniconda (Python 3.7)
    if: startsWith(inputs.python-version, "3.7")
    uses: conda-incubator/setup-miniconda@v3
    with:
      python-version: ${{ inputs.python-version }}
      activate-environment: macrosynergy-env
      auto-activate-base: false

  - name: Get Week Number
    shell: bash
    id: week
    run: echo "week=$(date +%V)" >> $GITHUB_ENV

  - name: Restore pip cache
    id: cache
    uses: actions/cache@v4
    with:
      path: ${{ env.pythonLocation }}
      key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}-${{ env.week }}
      restore-keys: |
        ${{ runner.os }}-pip-

  - name: Install dependencies if cache was not found (Python 3.7)
    shell: bash -l {0}
    if: steps.cache.outputs.cache-hit != 'true' && startsWith(inputs.python-version, '3.7')
    run: |
      pip install . --no-deps
      pip install -r tests/requirements-py37.txt
      pip uninstall -y macrosynergy

  - name: Install dependencies if cache was not found (Python >= 3.8)
    shell: bash
    if: steps.cache.outputs.cache-hit != 'true' && !startsWith(inputs.python-version, '3.7')
    run: |
      pip install .[all,test]
      pip uninstall -y macrosynergy
